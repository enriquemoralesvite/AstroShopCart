---
import CartPreview from './CartPreview.astro';
---

<header class="bg-white shadow-md px-6 py-4 flex justify-between items-center sticky top-0 z-50">
     <nav id="nav-menu" class="container mx-auto px-4 py-4 flex justify-between items-center">
    <h1 class="text-2xl font-bold">ShopNow</h1>

    <!-- Botón hamburguesa -->
    <button id="menu-toggle" class="md:hidden text-gray-600 hover:text-gray-800">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none"
            viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M4 6h16M4 12h16M4 18h16" />
        </svg>
    </button>

 <!-- Enlaces de navegación (en escritorio) -->

 <div class="hidden md:flex space-x-4">
<a href="/" class="hover:text-gray-500">Productos</a>
        <a href="/historial" class="hover:text-gray-500">Órdenes</a>
        <a href="/canasta" class="hover:text-gray-500">Carrito</a>
        <a href="/login" class="hover:text-gray-500">Login</a>
        <a href="/register" class="hover:text-gray-500">Sign In</a>
        <div class="relative ml-0 md:ml-4" id="cart-container">
            <button id="cart-button" class="p-2 text-gray-600 hover:text-gray-800 cursor-pointer">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none"
                    viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
                <span id="cart-badge"
                    class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 justify-center hidden">0</span>
            </button>
            <CartPreview />
        </div>
</div>


<!-- Menú móvil (oculto por defecto) -->

<div id="mobile-menu" class="absolute top-16 right-0 left-0 bg-white p-4 rounded-b-lg shadow-lg hidden md:hidden">
    <div class="flex flex-col space-y-4">
        <a href="/" class="hover:text-gray-500">Productos</a>
        <a href="/historial" class="hover:text-gray-500">Órdenes</a>
        <a href="/canasta" class="hover:text-gray-500">Carrito</a>
        <a href="/login" class="hover:text-gray-500">Login</a>
        <a href="/register" class="hover:text-gray-500">Sign In</a>
        <div class="relative inline-block " id="cart-container">
            <button id="cart-button" class="p-2 text-gray-600 hover:text-gray-800 cursor-pointer relative">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none"
                    viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
                <span id="cart-badge" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">0</span>
            </button>
            <CartPreview />
        </div>

</div>
        </div>
    </nav>
</header>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        const menuToggle = document.getElementById('menu-toggle');
        const mobileMenu = document.getElementById('mobile-menu');

        menuToggle?.addEventListener('click', () => {
            mobileMenu?.classList.toggle('hidden');
        });

        // Carrito
        const cartButton = document.getElementById('cart-button');
        const cartPreview = document.getElementById('cart-preview');
        const cartContainer = document.getElementById('cart-container');

        if (cartButton && cartPreview) {
            cartButton.addEventListener('click', (e) => {
                e.stopPropagation();
                cartPreview.classList.toggle('hidden');
                window.updateCartUI?.();
            });
        }

        document.addEventListener('click', (e) => {
            if (e.target instanceof Element && !cartContainer?.contains(e.target)) {
                cartPreview?.classList.add('hidden');
            }
        });

        cartContainer?.addEventListener('click', (e) => e.stopPropagation());
    });
</script>
